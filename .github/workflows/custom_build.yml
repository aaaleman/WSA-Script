name: Custom WSA Build

on:
  workflow_dispatch:
    inputs:
      arch:
        description: Target CPU architecture of WSA.
        required: true
        default: x64
        type: choice
        options: [x64, arm64]

      release_type:
        description: WSA Release Channel
        required: true
        default: Retail
        type: choice
        options: ["Retail", "Release Preview", "Insider Slow", "Insider Fast", "Insider Private"]

      user_code:
        description: User code for WSA Insider User (Optional)
        required: false
        default: ""
        type: string

      gapps_brand:
        description: Google Apps brand
        required: true
        default: "MindTheGapps v13.0"
        type: choice
        options: ["MindTheGapps v13.0", "No GApps"]

      root_sol:
        description: Root solution
        required: true
        default: "Magisk Official"
        type: choice
        options: ["Non-root", "KernelSU", "Magisk Official", "Magisk Alpha (vvb2060)", "Magisk Delta (HuskyDG)"]

      magisk_channel:
        description: Magisk channel
        required: true
        default: "Magisk Stable"
        type: choice
        options: ["Magisk Stable", "Magisk Beta", "Magisk Canary", "Magisk Debug"]

      compression:
        description: Compression format.
        required: true
        default: ".7z"
        type: choice
        options: [".zip", ".7z"]

      remove_amazon:
        description: Remove Amazon Appstore from the system
        required: true
        default: true
        type: boolean

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Prepare Build
        run: |
          mkdir -p output
          echo "user_code=${{ inputs.user_code }}" > output/.ms_account
          echo "Build simulation... (placeholder for real build script)"
          mkdir -p output/WSA_${{ inputs.arch }}_${{ inputs.release_type }}
          echo "Fake WSA Files" > output/WSA_${{ inputs.arch }}_${{ inputs.release_type }}/dummy_file.txt

      - name: Set Outputs
        id: set-vars
        run: |
          echo "artifact=WSA_${{ inputs.arch }}_${{ inputs.release_type }}" >> $GITHUB_OUTPUT
          echo "built=$(date +%Y%m%d%H%M)" >> $GITHUB_OUTPUT

    outputs:
      artifact: ${{ steps.set-vars.outputs.artifact }}
      built: ${{ steps.set-vars.outputs.built }}

  package:
    name: Package and Upload
    runs-on: windows-latest
    needs: build
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Create Archive
        working-directory: output
        run: |
          7z a -t7z -mx=6 -m0=LZMA2 -ms=on -mmt=8 -sdel `"${{ needs.build.outputs.artifact }}.7z`" `"${{ needs.build.outputs.artifact }}\*`"
          Get-FileHash -Path "${{ needs.build.outputs.artifact }}.7z" -Algorithm SHA256 | ForEach-Object { "$($_.Hash.ToLower())  $($_.Path)" } | Out-File -Encoding UTF8 sha256-checksum.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: WSA_Build
          path: output/*.7z
